          .globl __start
          .text 0x00400000
__start:  li $a0,'M'
          jal Input
          move $a0,$v0
		  
          li $a0,'Q'
          jal Input
          move $a1,$v0
		  
          jal Mult
	  move $a1,$v0
		  
          li $a0, 'R'
          jal Output
		  
	  syscall
          li $v0,10
          syscall      #exit
		  
# 	int Mult(int $a0, int $a1)
#		$v0 = $a0 * $a1) 
Mult:     li $v0, 0
          beqz $a1, MultRet
MultFor:  add $v0, $v0, $a0
          addi $a1, $a1, -1
          bne $a1, $zero, MultFor
MultRet:  jr $ra

#

Input:  li $v0, 11
		syscall	#print_char($a0)
		li $a0 , '='
		li $v0, 11
		syscall 	#print_char('=')
		li $v0, 5
		syscall 	#$v0 = read_int()
		jr $ra 		# return
		
		
Output: 		